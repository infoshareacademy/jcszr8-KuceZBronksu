// <auto-generated />
using KuceZBronksuDAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KuceZBronksuWEB.Migrations
{
    [DbContext(typeof(MealAppContext))]
    [Migration("20230330095136_FavouritesRecipesTableAdded")]
    partial class FavouritesRecipesTableAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KuceZBronksuDAL.Images", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LARGEId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("REGULARId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SMALLId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("THUMBNAILId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LARGEId");

                    b.HasIndex("REGULARId");

                    b.HasIndex("SMALLId");

                    b.HasIndex("THUMBNAILId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("KuceZBronksuDAL.LARGE", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LargeImages");
                });

            modelBuilder.Entity("KuceZBronksuDAL.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KuceZBronksuDAL.REGULAR", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RegularImages");
                });

            modelBuilder.Entity("KuceZBronksuDAL.Recipe", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Cautions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CuisineType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DietLabels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthLabels")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagesId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IngredientLines")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MealType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecipeSteps")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareAs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ImagesId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("KuceZBronksuDAL.SMALL", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SmallImages");
                });

            modelBuilder.Entity("KuceZBronksuDAL.THUMBNAIL", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ThumbnailImages");
                });

            modelBuilder.Entity("RecipeUser", b =>
                {
                    b.Property<string>("RecipesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UsersId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RecipesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("FavouritesRecipes", (string)null);
                });

            modelBuilder.Entity("KuceZBronksuDAL.Images", b =>
                {
                    b.HasOne("KuceZBronksuDAL.LARGE", "LARGE")
                        .WithMany()
                        .HasForeignKey("LARGEId");

                    b.HasOne("KuceZBronksuDAL.REGULAR", "REGULAR")
                        .WithMany()
                        .HasForeignKey("REGULARId");

                    b.HasOne("KuceZBronksuDAL.SMALL", "SMALL")
                        .WithMany()
                        .HasForeignKey("SMALLId");

                    b.HasOne("KuceZBronksuDAL.THUMBNAIL", "THUMBNAIL")
                        .WithMany()
                        .HasForeignKey("THUMBNAILId");

                    b.Navigation("LARGE");

                    b.Navigation("REGULAR");

                    b.Navigation("SMALL");

                    b.Navigation("THUMBNAIL");
                });

            modelBuilder.Entity("KuceZBronksuDAL.Recipe", b =>
                {
                    b.HasOne("KuceZBronksuDAL.Images", "Images")
                        .WithMany()
                        .HasForeignKey("ImagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Images");
                });

            modelBuilder.Entity("RecipeUser", b =>
                {
                    b.HasOne("KuceZBronksuDAL.Recipe", null)
                        .WithMany()
                        .HasForeignKey("RecipesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KuceZBronksuDAL.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
